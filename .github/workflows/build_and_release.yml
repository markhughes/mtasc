name: Build and Release

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            shell-name: bash
            ocaml-version: "4.12"
          - os: macos-latest
            shell-name: bash
            ocaml-version: "4.12"
          - os: windows-latest
            shell-name: cygwin
            ocaml-version: "4.12"

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: "recursive"

      - name: Set up OCaml
        uses: avsm/setup-ocaml@v2
        with:
          ocaml-compiler: ${{ matrix.ocaml-version }}

      - name: Get version
        id: get_version
        run: echo "::set-output name=version::$(cat version.txt | head -n1)"

      - name: Build (Linux/Mac)
        if: matrix.shell-name == 'bash'
        run: ./build.sh
        shell: bash

      - name: Build (Windows - Cygwin)
        if: matrix.shell-name == 'cygwin'
        run: |
          pwd   
          ls -l  
          D:\cygwin\bin\bash.exe --login -c "./build.sh"

      - name: Zip bin contents
        run: |
          cd bin
          zip -r ../${{ steps.get_version.outputs.version }}-${{ github.sha }}_${{ matrix.os }}.zip .

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.version }}-${{ github.sha }}
          release_name: Release ${{ steps.get_version.outputs.version }}-${{ github.sha }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ steps.get_version.outputs.version }}-${{ github.sha }}_${{ matrix.os }}.zip
          asset_name: ${{ steps.get_version.outputs.version }}-${{ github.sha }}_${{ matrix.os }}.zip
          asset_content_type: application/zip
